// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pending note renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFBE4",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "#FFF3B2",
        "borderRadius": 20,
        "borderWidth": 1,
        "elevation": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 20,
        "padding": 3,
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.18,
        "shadowRadius": 1,
        "width": 300,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 12,
          "letterSpacing": 0.5,
          "paddingRight": 10,
        }
      }
    >
      ASK BEFORE STICKING NOTE
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "height": 31,
          "width": 51,
        }
      }
      value={false}
    />
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "#FFF3B2",
        "borderRadius": 20,
        "borderWidth": 1,
        "elevation": 1,
        "marginBottom": 20,
        "padding": 10,
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.18,
        "shadowRadius": 1,
        "width": 300,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 12,
          "letterSpacing": 0.5,
        }
      }
    >
      CHANGE PASSWORD
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "#FFF3B2",
        "borderRadius": 20,
        "borderWidth": 1,
        "elevation": 1,
        "marginBottom": 20,
        "padding": 10,
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.18,
        "shadowRadius": 1,
        "width": 300,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 12,
          "letterSpacing": 0.5,
        }
      }
    >
      DELETE ACCOUNT
    </Text>
  </View>
  <Text
    style={
      {
        "alignSelf": "center",
      }
    }
  />
</View>
`;
